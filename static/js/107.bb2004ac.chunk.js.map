{"version":3,"file":"static/js/107.bb2004ac.chunk.js","mappings":"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","sources":["components/PostList/PostList.jsx","components/pages/Home/Home.jsx","components/services/fetchMovies.js"],"sourcesContent":["import { Link, useLocation } from \"react-router-dom\";\r\n\r\nconst PostList = ({ items }) => {\r\n  const location = useLocation();\r\n\r\n  const elements = items.map(({ id, title }) => (\r\n    <li key={id}>\r\n      <Link state={{ from: location }} to={`/movies/${id}`}>\r\n        {title}\r\n      </Link>\r\n    </li>\r\n  ));\r\n  return <ul>{elements}</ul>;\r\n};\r\n\r\nPostList.defaultProps = {\r\n  items: [],\r\n};\r\n\r\nexport default PostList;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { fetchMovies } from \"../../services/fetchMovies\";\r\nimport \"../../styles/style.css\";\r\nimport PostList from \"../../PostList/PostList\";\r\n\r\nconst Home = () => {\r\n  const [state, setState] = useState({\r\n    items: [],\r\n    isLoading: false,\r\n    error: null,\r\n    page: 1,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const fetchPosts = async () => {\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        isLoading: true,\r\n      }));\r\n      try {\r\n        const result = await fetchMovies(state.page);\r\n        setState((prevState) => ({\r\n          ...prevState,\r\n          items: [...prevState.items, ...result.results],\r\n        }));\r\n      } catch (error) {\r\n        setState((prevState) => ({\r\n          ...prevState,\r\n          error,\r\n        }));\r\n      } finally {\r\n        setState((prevState) => ({\r\n          ...prevState,\r\n          isLoading: false,\r\n        }));\r\n      }\r\n    };\r\n    fetchPosts();\r\n  }, [state.page]);\r\n\r\n  const handleLoadMore = () => {\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      page: prevState.page + 1,\r\n    }));\r\n  };\r\n\r\n  const { items, isLoading, error } = state;\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Movie List</h1>\r\n      {items.length > 0 && <PostList items={items} />}\r\n      {isLoading && <p>Loading...</p>}\r\n      {error && <p>{error}</p>}\r\n      <button type=\"button\" onClick={handleLoadMore}>\r\n        Load more\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import axios from 'axios';\r\n\r\nconst APIKEY = '03bc4a4901e556f9924acb8dbfb5d03a';\r\nconst URL = 'https://api.themoviedb.org/3';\r\n\r\nexport const fetchMovies = async () => {\r\n    const page = 12;\r\n    try {\r\n        const { data } = await axios.get(`${URL}/movie/popular`, {\r\n            params: {\r\n                api_key: APIKEY,\r\n                page: page,\r\n            },\r\n        });\r\n        return data;\r\n    } catch (error) {\r\n        throw new Error(`Failed to fetch data: ${error.message}`);\r\n    }\r\n};\r\n\r\n\r\nexport const fetchMoviesDetails = async (id) => {\r\n    try {\r\n        const { data } = await axios.get(`${URL}/movie/${id}`, {\r\n            params: {\r\n                api_key: APIKEY,\r\n            },\r\n        });\r\n        return data;\r\n    } catch (error) {\r\n        throw new Error(`Failed to fetch data: ${error.message}`);\r\n    }\r\n};\r\n\r\nexport const searchPosts = async (search) => {\r\n    try {\r\n        const response = await axios.get(`${URL}/search/movie`, {\r\n            params: {\r\n                api_key: APIKEY,\r\n                query: search,\r\n            },\r\n        });\r\n\r\n        return response.data.results;\r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n};\r\nexport const searchReviews = async (id) => {\r\n    try {\r\n        const response = await axios.get(`${URL}/search/movie/${id}/reviews`, {\r\n            params: {\r\n                api_key: APIKEY,\r\n                query: id,\r\n            },\r\n        });\r\n\r\n        return response.data.results;\r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\n\r\nexport const getReviews = async id => {\r\n    return await fetch(\r\n        `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${APIKEY}&include_adult=false`\r\n    ).then(res => {\r\n        if (!res.ok) {\r\n            //   return Promise.reject(new Error(`No ${searchQuery} picture`));\r\n        }\r\n        return res.json();\r\n    });\r\n};\r\n\r\n\r\n\r\n\r\nconst options = { method: 'GET', headers: { accept: 'application/json' } };\r\n\r\nasync function getMovieReviews(movieId) {\r\n    const fetchURL = `${URL}/movie/${movieId}/reviews?api_key=${APIKEY}&language=en-US&page=1`;\r\n\r\n    try {\r\n        const response = await fetch(fetchURL, options);\r\n        if (!response.ok) {\r\n            throw new Error('Network response was not ok');\r\n        }\r\n        const data = await response.json();\r\n        return data;\r\n    } catch (error) {\r\n        console.error(error);\r\n    }\r\n}\r\n\r\nexport { getMovieReviews };\r\n\r\n\r\n\r\n// async function getMovieCast(movieId) {\r\n//     const fetchURL = `${URL}/movie/${movieId}/cast?api_key=${APIKEY}&language=en-US&page=1`;\r\n\r\n//     try {\r\n//         console.log(\"Fetching from URL:\", fetchURL); // Add logging for the fetch URL\r\n//         const response = await fetch(fetchURL, options);\r\n//         if (!response.ok) {\r\n//             throw new Error('Movie cast not found or the request was not successful');\r\n//         }\r\n//         const data = await response.json();\r\n//         return data;\r\n//     } catch (error) {\r\n//         console.error(error);\r\n//         throw error;\r\n//     }\r\n// }\r\n\r\n// export { getMovieCast };\r\n\r\n\r\n\r\nexport const getMovieCast = async id => {\r\n    return await fetch(\r\n        `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${APIKEY}&include_adult=false`\r\n    ).then(res => {\r\n        if (!res.ok) {\r\n            //   return Promise.reject(new Error(`No ${searchQuery} picture`));\r\n        }\r\n        return res.json();\r\n    });\r\n};\r\n"],"names":["PostList","_ref","items","location","useLocation","elements","map","_ref2","id","title","_jsx","children","Link","state","from","to","concat","defaultProps","Home","setState","useState","isLoading","error","page","useEffect","async","prevState","result","fetchMovies","results","fetchPosts","_jsxs","className","length","type","onClick","handleLoadMore","APIKEY","URL","data","axios","get","params","api_key","Error","message","fetchMoviesDetails","searchPosts","query","search","options","method","headers","accept","getMovieReviews","movieId","fetchURL","response","fetch","ok","json","console","getMovieCast","then","res"],"sourceRoot":""}