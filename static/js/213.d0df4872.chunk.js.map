{"version":3,"file":"static/js/213.d0df4872.chunk.js","mappings":"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","sources":["components/PostList/PostList.jsx","components/pages/Movies/MoviesSearch.jsx","components/pages/Movies/Movies.jsx","components/services/fetchMovies.js"],"sourcesContent":["import { Link, useLocation } from \"react-router-dom\";\r\nimport styles from \"../styles/styles.module.css\";\r\n\r\nconst PostList = ({ items }) => {\r\n  const location = useLocation();\r\n\r\n  const elements = items.map(({ id, title }) => (\r\n    <li key={id} className={styles.list}>\r\n      <Link\r\n        state={{ from: location }}\r\n        to={`/movies/${id}`}\r\n        style={{ textDecoration: \"none\" }}\r\n      >\r\n        {title}\r\n      </Link>\r\n    </li>\r\n  ));\r\n  return <ul className={styles.container2}>{elements}</ul>;\r\n};\r\n\r\nPostList.defaultProps = {\r\n  items: [],\r\n};\r\n\r\nexport default PostList;\r\n","import { useState } from \"react\";\r\n\r\nconst MoviesSearch = ({ onSubmit }) => {\r\n  const [state, setState] = useState({\r\n    search: \"\",\r\n  });\r\n\r\n  // const handleChange = (e) => {\r\n  //   const value = e.target.value;\r\n  //   setState({\r\n  //     ...state,\r\n  //     search: value,\r\n  //   });\r\n  // };\r\n\r\n  const handleChange = ({ target }) => {\r\n    const { name, value } = target;\r\n    setState({\r\n      ...state,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    onSubmit({ ...state });\r\n    setState({\r\n      search: \"\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        onChange={handleChange}\r\n        name=\"search\"\r\n        value={state.search}\r\n        // placeholder=\"search\"\r\n        required\r\n      ></input>\r\n\r\n      <button type=\"submit\">Search</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default MoviesSearch;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport MoviesSearch from \"./MoviesSearch\";\r\nimport { searchPosts } from \"../../services/fetchMovies\";\r\nimport PostList from \"../../PostList/PostList\";\r\n\r\nconst Movies = () => {\r\n  const [state, setState] = useState({\r\n    items: [],\r\n    loading: false,\r\n    error: null,\r\n  });\r\n\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n  const search = searchParams.get(\"search\");\r\n\r\n  //   const [search, setSearch] = useState(\"\");\r\n  const [loading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchPosts = async () => {\r\n      try {\r\n        setState((prevState) => ({\r\n          ...prevState,\r\n          loading: true,\r\n        }));\r\n\r\n        const data = await searchPosts(search);\r\n\r\n        setState((prevState) => ({\r\n          ...prevState,\r\n          items: data,\r\n        }));\r\n      } catch (error) {\r\n        setState((prevState) => ({\r\n          ...prevState,\r\n          error,\r\n        }));\r\n      } finally {\r\n        setState((prevState) => ({\r\n          ...prevState,\r\n          loading: false,\r\n        }));\r\n      }\r\n    };\r\n\r\n    if (search) {\r\n      fetchPosts();\r\n    }\r\n  }, [search]);\r\n\r\n  const changeSearch = ({ search }) => {\r\n    // setSearch(search);\r\n    setSearchParams({ search });\r\n  };\r\n\r\n  const { items } = state;\r\n\r\n  return (\r\n    // <div className=\"container\">\r\n    //   <MoviesSearch onSubmit={changeSearch} />\r\n    //   {items.length > 0 && <PostList items={items} />}\r\n    // </div>\r\n    <div className=\"container\">\r\n      <MoviesSearch onSubmit={changeSearch} />\r\n      {loading ? (\r\n        <p>Loading...</p>\r\n      ) : (\r\n        items.length > 0 && <PostList items={items} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default Movies;\r\n","import axios from 'axios';\r\n\r\nconst APIKEY = '03bc4a4901e556f9924acb8dbfb5d03a';\r\nconst URL = 'https://api.themoviedb.org/3';\r\n\r\nexport const fetchMovies = async () => {\r\n    const page = 12;\r\n    try {\r\n        const { data } = await axios.get(`${URL}/movie/popular`, {\r\n            params: {\r\n                api_key: APIKEY,\r\n                page: page,\r\n            },\r\n        });\r\n        return data;\r\n    } catch (error) {\r\n        throw new Error(`Failed to fetch data: ${error.message}`);\r\n    }\r\n};\r\n\r\n\r\nexport const fetchMoviesDetails = async (id) => {\r\n    try {\r\n        const { data } = await axios.get(`${URL}/movie/${id}`, {\r\n            params: {\r\n                api_key: APIKEY,\r\n            },\r\n        });\r\n        return data;\r\n    } catch (error) {\r\n        throw new Error(`Failed to fetch data: ${error.message}`);\r\n    }\r\n};\r\n\r\nexport const searchPosts = async (search) => {\r\n    try {\r\n        const response = await axios.get(`${URL}/search/movie`, {\r\n            params: {\r\n                api_key: APIKEY,\r\n                query: search,\r\n            },\r\n        });\r\n\r\n        return response.data.results;\r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n};\r\nexport const searchReviews = async (id) => {\r\n    try {\r\n        const response = await axios.get(`${URL}/search/movie/${id}/reviews`, {\r\n            params: {\r\n                api_key: APIKEY,\r\n                query: id,\r\n            },\r\n        });\r\n\r\n        return response.data.results;\r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\n\r\nexport const getReviews = async id => {\r\n    return await fetch(\r\n        `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${APIKEY}&include_adult=false`\r\n    ).then(res => {\r\n        if (!res.ok) {\r\n            //   return Promise.reject(new Error(`No ${searchQuery} picture`));\r\n        }\r\n        return res.json();\r\n    });\r\n};\r\n\r\n\r\n\r\n\r\nconst options = { method: 'GET', headers: { accept: 'application/json' } };\r\n\r\nasync function getMovieReviews(movieId) {\r\n    const fetchURL = `${URL}/movie/${movieId}/reviews?api_key=${APIKEY}&language=en-US&page=1`;\r\n\r\n    try {\r\n        const response = await fetch(fetchURL, options);\r\n        if (!response.ok) {\r\n            throw new Error('Network response was not ok');\r\n        }\r\n        const data = await response.json();\r\n        return data;\r\n    } catch (error) {\r\n        console.error(error);\r\n    }\r\n}\r\n\r\nexport { getMovieReviews };\r\n\r\n\r\n\r\n// async function getMovieCast(movieId) {\r\n//     const fetchURL = `${URL}/movie/${movieId}/cast?api_key=${APIKEY}&language=en-US&page=1`;\r\n\r\n//     try {\r\n//         console.log(\"Fetching from URL:\", fetchURL); // Add logging for the fetch URL\r\n//         const response = await fetch(fetchURL, options);\r\n//         if (!response.ok) {\r\n//             throw new Error('Movie cast not found or the request was not successful');\r\n//         }\r\n//         const data = await response.json();\r\n//         return data;\r\n//     } catch (error) {\r\n//         console.error(error);\r\n//         throw error;\r\n//     }\r\n// }\r\n\r\n// export { getMovieCast };\r\n\r\n\r\n\r\nexport const getMovieCast = async id => {\r\n    return await fetch(\r\n        `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${APIKEY}&include_adult=false`\r\n    ).then(res => {\r\n        if (!res.ok) {\r\n            //   return Promise.reject(new Error(`No ${searchQuery} picture`));\r\n        }\r\n        return res.json();\r\n    });\r\n};\r\n"],"names":["PostList","_ref","items","location","useLocation","elements","map","_ref2","id","title","_jsx","className","styles","list","children","Link","state","from","to","concat","style","textDecoration","container2","defaultProps","onSubmit","setState","useState","search","_jsxs","e","preventDefault","onChange","target","name","value","required","type","Movies","loading","error","searchParams","setSearchParams","useSearchParams","get","useEffect","async","prevState","data","searchPosts","fetchPosts","MoviesSearch","length","APIKEY","URL","fetchMovies","axios","params","api_key","page","Error","message","fetchMoviesDetails","query","results","options","method","headers","accept","getMovieReviews","movieId","fetchURL","response","fetch","ok","json","console","getMovieCast","then","res"],"sourceRoot":""}